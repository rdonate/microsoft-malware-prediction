#! - * - coding UTF-8 - * -


import pandas as pd
import numpy as np
import os, gc
from joblib import load, dump


def prediction(prefix_collections, types_of_features, dir_Data_Raw, seed):
    np.random.seed(seed=seed)
    dir_model = dir_Data_Raw + '/models/'
    dir_data = dir_Data_Raw + '/data/'
    dir_prediction = dir_Data_Raw + '/predicts/'
    if not os.path.exists(dir_prediction):
        os.mkdir(dir_prediction)
    for index in range(2):
        prediction_one_model(dir_data, dir_model, dir_prediction, prefix_collections, types_of_features[index])
    with open(dir_prediction + 'prediction_' + types_of_features[0], 'rb') as file:
        predict1 = load(file)
    file.close()
    del file
    gc.collect()
    with open(dir_prediction + 'prediction_' + types_of_features[1], 'rb') as file:
        predict2 = load(file)
    predict_y = np.column_stack((predict1[:,0],predict2[:,0]))
    file.close()
    del file
    gc.collect()
    with open(dir_model + 'model_scores', 'rb') as file:
        score = load(file)
    results_y = np.sum(np.multiply(predict_y,score), axis=1)/np.sum(score)
    submission = pd.read_csv(dir_Data_Raw+'sample_submission.csv')
    submission.iloc[:,1]=results_y
    submission.to_csv(dir_prediction + 'porbability_normalizate.csv', index = False)
    results_y = np.sum(predict_y, axis=1) / 2
    submission.iloc[:, 1] = results_y
    submission.to_csv(dir_prediction + 'porbability_mean.csv', index=False)

def prediction_one_model(dir_data, dir_model, dir_prediction, prefix_collection, type_of_feature):
    with open(dir_model + 'model_' + type_of_feature, 'rb') as file:
        model = load(file)
    file.close()
    del file
    gc.collect()
    with open(dir_data + prefix_collection + '_' + type_of_feature, 'rb') as file:
        data = load(file)
    file.close()
    del file
    gc.collect()
    predict = model.predict_proba(data)
    del data, model
    gc.collect()
    with open(dir_prediction + 'prediction_'+ type_of_feature, 'wb') as file:
        dump(predict, file)