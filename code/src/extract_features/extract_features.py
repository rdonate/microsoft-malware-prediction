#! - * - coding UTF-8 - * -

import mmap,re


def extract_features(db, dir_Data_Raw, prefix_collections, names_collections):
    lengthDB = 0
    colection = db.selectCollection(prefix_collections + '_' + names_collections[1])
    with open(dir_Data_Raw, 'r+b') as file:
        mm = mmap.mmap(file.fileno(), 0)
        name_features = re.split(",", re.sub(r"^b'|\\n'$", "", str(file.readline())))
        name_features.append('index')
        notIsNumber = []
        notIsNumber.append(name_features.index('Census_InternalBatteryType'))
        notIsNumber.append(name_features.index('MachineIdentifier'))
        while True:
            line = file.readline()
            aux_line = re.split(",", re.sub(r"^b'|\\n'$", "", str(line)))
            aux_line.append(lengthDB)
            for index, elem in enumerate(aux_line):
                if isinstance(elem, str) and index not in notIsNumber:
                    if elem.isnumeric():
                        aux_line[index] = int(elem)
                    if elem.count(".") == 1:
                        aux_elem = elem.split(".")
                        if aux_elem[0].isnumeric() and aux_elem[1].isnumeric():
                            aux_line[index] = float(elem)
                    if elem == "" and index:
                        aux_line[index] = 0
            value = dict(zip(name_features, aux_line))
            try:
                colection.insert(value)
            except Exception as e:
                print(value)
                print(e)
                break
            lengthDB += 1
            if lengthDB % 10000 == 0:
                print(lengthDB)
            if not line:
                break
    return lengthDB

